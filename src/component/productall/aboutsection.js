import React, { useEffect, useState } from 'react';
import {
  Card,
  Menu,
  Row,
  Col,
  Typography,
  Input,
  Button,
  message,
  Divider,
  Space,
} from 'antd';
import { EditOutlined } from '@ant-design/icons';
import axiosClient from '../../api/apiConfig';

const { Title, Text } = Typography;

const AboutSection = () => {
  const phoneNumber = localStorage.getItem('phoneNumber');
  const [selectedMenu, setSelectedMenu] = useState('overview');
  const [editField, setEditField] = useState(null);

  const [profileInfo, setProfileInfo] = useState({
    university: '',
    address: '',
    comefrom: '',
    relation: '',
    phone: phoneNumber,
    company: '',
    highschool: '',
    birthday: '',
    gender: '',
    family: '',
    bio: '',
    national: '',
    action: [],
    email: '',
  });
  const fetchInfo = async () => {
    try {
      const profileInfo = JSON.parse(localStorage.getItem('user'));
      console.log('Lay Info thanh cong');
      setProfileInfo({
        university: profileInfo.university,
        address: profileInfo.address,
        comefrom: profileInfo.comefrom,
        relation: profileInfo.relation,
        phone: phoneNumber,
        company: profileInfo.company,
        highschool: profileInfo.highschool,
        birthday: profileInfo.birthday,
        gender: profileInfo.gender,
        family: profileInfo.family,
        bio: profileInfo.bio,
        national: profileInfo.national,
        action: profileInfo.action,
        email: profileInfo.email,
      });
    } catch (error) {
      console.log('Khong the lay Info');
    }
  };
  const updateField = (field, value) => {
    setProfileInfo((prev) => ({ ...prev, [field]: value }));
  };

  const EditableText = ({ label, field }) => (
    <div
      style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
      }}
    >
      <Text>
        {label}{' '}
        {editField === field ? (
          <Input
            value={profileInfo[field]}
            onChange={(e) => updateField(field, e.target.value)}
            onBlur={() => setEditField(null)}
            autoFocus
            size="small"
          />
        ) : (
          <b>{profileInfo[field]}</b>
        )}
      </Text>
      {editField !== field && (
        <EditOutlined
          onClick={() => setEditField(field)}
          style={{ cursor: 'pointer', marginLeft: 8 }}
        />
      )}
    </div>
  );

  const renderContent = () => {
    switch (selectedMenu) {
      case 'overview':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            <EditableText label="üéì T·ª´ng h·ªçc t·∫°i" field="university" />
            <EditableText label="üè† S·ªëng t·∫°i" field="address" />
            <EditableText label="üìç ƒê·∫øn t·ª´" field="comefrom" />
            <EditableText label="‚ù§Ô∏è" field="relation" />
            <EditableText label="üìû" field="phone" />
          </Space>
        );
      case 'work':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            <Text>C√¥ng vi·ªác</Text>
            <EditableText label="üíº L√†m vi·ªác t·∫°i" field="company" />
            <Text>ƒê·∫°i h·ªçc</Text>
            <EditableText label="üéì H·ªçc t·∫°i" field="university" />
            <Text>Trung h·ªçc</Text>
            <EditableText label="üéì H·ªçc t·∫°i" field="highschool" />
          </Space>
        );
      case 'places':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            <EditableText label="üè° Hi·ªán s·ªëng t·∫°i" field="address" />
            <EditableText label="üåç Qu√™ qu√°n" field="comefrom" />
          </Space>
        );
      case 'contact':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            <EditableText label="üìû S·ªë ƒëi·ªán tho·∫°i:" field="phone" />

            <EditableText label="üìß Email:" field="email" />

            <EditableText label="üóìÔ∏è Ng√†y sinh:" field="birthday" />
            <EditableText label="üë©‚Äç‚öñÔ∏è Gi·ªõi t√≠nh:" field="gender" />
          </Space>
        );
      case 'family':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            <EditableText label="üë®" field="family" />
            <EditableText label="üíô" field="relation" />
          </Space>
        );
      case 'details':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            <EditableText label="üìù Ti·ªÉu s·ª≠:" field="bio" />
            <EditableText label="üè≥Ô∏è Qu·ªëc t·ªãch:" field="national" />
          </Space>
        );
      case 'events':
        return (
          <Space direction="vertical" size={25} style={{ width: '100%' }}>
            {profileInfo.action.map((item, index) => (
              <Text key={index}>üìç {item}</Text>
            ))}
          </Space>
        );
      default:
        return null;
    }
  };

  const handleUpdateProfile = async () => {
    try {
      console.log(profileInfo);
      const res = await axiosClient.post('/users/updateaccount', profileInfo);
      message.success('Cap nhat thanh cong');
    } catch (err) {
      message.error('Khong the update');
    }
  };

  useEffect(() => {
    fetchInfo();
  }, []);
  return (
    <Row gutter={24} style={{ padding: 24 }}>
      <Col span={8}>
        <Card
          bordered={false}
          style={{ borderRadius: 10, boxShadow: '0 2px 8px rgba(0,0,0,0.05)' }}
        >
          <Title level={5}>Gi·ªõi thi·ªáu</Title>
          <Menu
            mode="inline"
            selectedKeys={[selectedMenu]}
            onClick={(e) => setSelectedMenu(e.key)}
            items={[
              { key: 'overview', label: 'T·ªïng quan' },
              { key: 'work', label: 'C√¥ng vi·ªác v√† h·ªçc v·∫•n' },
              { key: 'places', label: 'N∆°i t·ª´ng s·ªëng' },
              { key: 'contact', label: 'Th√¥ng tin li√™n h·ªá v√† c∆° b·∫£n' },
              { key: 'family', label: 'Gia ƒë√¨nh v√† c√°c m·ªëi quan h·ªá' },
              { key: 'details', label: 'Chi ti·∫øt v·ªÅ b·∫°n' },
              { key: 'events', label: 'S·ª± ki·ªán trong ƒë·ªùi' },
            ]}
          />
        </Card>
      </Col>
      <Col span={16}>
        <Card
          title={
            {
              overview: 'T·ªïng quan',
              work: 'C√¥ng vi·ªác v√† h·ªçc v·∫•n',
              places: 'N∆°i t·ª´ng s·ªëng',
              contact: 'Th√¥ng tin li√™n h·ªá v√† c∆° b·∫£n',
              family: 'Gia ƒë√¨nh v√† c√°c m·ªëi quan h·ªá',
              details: 'Chi ti·∫øt v·ªÅ b·∫°n',
              events: 'S·ª± ki·ªán trong ƒë·ªùi',
            }[selectedMenu]
          }
          bordered={false}
          style={{ borderRadius: 10, boxShadow: '0 2px 8px rgba(0,0,0,0.05)' }}
        >
          {renderContent()}
          <Divider />
          <Button type="primary" onClick={handleUpdateProfile}>
            C·∫≠p nh·∫≠t
          </Button>
        </Card>
      </Col>
    </Row>
  );
};

export default AboutSection;
